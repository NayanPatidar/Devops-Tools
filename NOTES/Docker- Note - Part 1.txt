Chapter 1 

-> hypervisor virtualization - One or More indepedent machines run on physical hardware via 
                               intermediation layer.
-> container virtualization - It runs on top of operating system's kernel. It allows multiple
                               isolated user instaces to be run on a single host.

Introducing Docker
Docker is an open-source engine that automates the deployment of applications into containers.
Docker adds an application deployment engine on top of a virtualized container execution 
environment. It is designed to provide a lightweight and fast environment in which to run the 
your code as well as an efficiemt workflow to get that code from your laptop to your test 
environment and then into the production. Docker is incredibly simple. Indeed, you can get started with Docker
on a minimal host running nothing but a compatible Linux kernel and a Docker
binary.

An easy and lightweight way to model reality: Docker is really fast. You can Dockerize your applications 
in minutes. Docker relies on copy and write model so the changes you made only get changed.
Docker containers take less than a second to launch. Because you don't have the overhead hypervisor 
also means that you can pack more of them into oyur hosts.

** Docker also encourages service-oriented and microservices architectures.

Components 
- The Docker client and server, also called the Docker Engine.
- Docker Images
- Registries
- Docker containers

Docker client and server
Docker is a client-server application. The Docker client talks to the Docker server
or daemon, which, in turn, does all the work. You’ll also sometimes see the Docker
daemon called the Docker Engine.

Images
- Images are the building blocks of the Docker World. You launch your containers from images.
- One can think images as the source code for your containers.
- Images are build by a step - by - step process:
* Add a file
* Open a port

Registries
Docker stores the images you build in registries. There are two type of registries: public and
private. Docker, Inc., operates the public registry for images, called the Docker Hub. Docker hub 
has images of almost thing one require. One can also store images you want to keep private on the 
Docker Hub.

Containers
Docker helps you build and deploy containers inside of which you can package your applications
and services.Containers are launchedfrom images and can contain one or more running processes.
You can think about images as the building or packing aspect of Docker and the containers as the
running or execution aspect of Docker. A Docker container is:
• An image format.
• A set of standard operations.
• An execution environment.

Compose, Swarm and Kubernetes
We can also create Docker Containers in stacks and clusters, what Docker calls swarms. It has main
two tools:

• Docker Compose - It is a tool used to define and run multi-
container applications. It allows you to describe an entire application 
stack in a single YAML file, which includes information about the services, 
networks, and volumes that make up your application. 

• Docker Swarm - It is native orchestration and clostering solution for docker 
containers. IT allows you to create a group of Docker nodes that work
together for a cluster.
